/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/toastify-js/src/toastify.js":
/*!**************************************************!*\
  !*** ./node_modules/toastify-js/src/toastify.js ***!
  \**************************************************/
/***/ (function(module) {

eval("/*!\n * Toastify js 1.12.0\n * https://github.com/apvarun/toastify-js\n * @license MIT licensed\n *\n * Copyright (C) 2018 Varun A P\n */\n(function(root, factory) {\n  if ( true && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Toastify = factory();\n  }\n})(this, function(global) {\n  // Object initialization\n  var Toastify = function(options) {\n      // Returning a new init object\n      return new Toastify.lib.init(options);\n    },\n    // Library version\n    version = \"1.12.0\";\n\n  // Set the default global options\n  Toastify.defaults = {\n    oldestFirst: true,\n    text: \"Toastify is awesome!\",\n    node: undefined,\n    duration: 3000,\n    selector: undefined,\n    callback: function () {\n    },\n    destination: undefined,\n    newWindow: false,\n    close: false,\n    gravity: \"toastify-top\",\n    positionLeft: false,\n    position: '',\n    backgroundColor: '',\n    avatar: \"\",\n    className: \"\",\n    stopOnFocus: true,\n    onClick: function () {\n    },\n    offset: {x: 0, y: 0},\n    escapeMarkup: true,\n    ariaLive: 'polite',\n    style: {background: ''}\n  };\n\n  // Defining the prototype of the object\n  Toastify.lib = Toastify.prototype = {\n    toastify: version,\n\n    constructor: Toastify,\n\n    // Initializing the object with required parameters\n    init: function(options) {\n      // Verifying and validating the input object\n      if (!options) {\n        options = {};\n      }\n\n      // Creating the options object\n      this.options = {};\n\n      this.toastElement = null;\n\n      // Validating the options\n      this.options.text = options.text || Toastify.defaults.text; // Display message\n      this.options.node = options.node || Toastify.defaults.node;  // Display content as node\n      this.options.duration = options.duration === 0 ? 0 : options.duration || Toastify.defaults.duration; // Display duration\n      this.options.selector = options.selector || Toastify.defaults.selector; // Parent selector\n      this.options.callback = options.callback || Toastify.defaults.callback; // Callback after display\n      this.options.destination = options.destination || Toastify.defaults.destination; // On-click destination\n      this.options.newWindow = options.newWindow || Toastify.defaults.newWindow; // Open destination in new window\n      this.options.close = options.close || Toastify.defaults.close; // Show toast close icon\n      this.options.gravity = options.gravity === \"bottom\" ? \"toastify-bottom\" : Toastify.defaults.gravity; // toast position - top or bottom\n      this.options.positionLeft = options.positionLeft || Toastify.defaults.positionLeft; // toast position - left or right\n      this.options.position = options.position || Toastify.defaults.position; // toast position - left or right\n      this.options.backgroundColor = options.backgroundColor || Toastify.defaults.backgroundColor; // toast background color\n      this.options.avatar = options.avatar || Toastify.defaults.avatar; // img element src - url or a path\n      this.options.className = options.className || Toastify.defaults.className; // additional class names for the toast\n      this.options.stopOnFocus = options.stopOnFocus === undefined ? Toastify.defaults.stopOnFocus : options.stopOnFocus; // stop timeout on focus\n      this.options.onClick = options.onClick || Toastify.defaults.onClick; // Callback after click\n      this.options.offset = options.offset || Toastify.defaults.offset; // toast offset\n      this.options.escapeMarkup = options.escapeMarkup !== undefined ? options.escapeMarkup : Toastify.defaults.escapeMarkup;\n      this.options.ariaLive = options.ariaLive || Toastify.defaults.ariaLive;\n      this.options.style = options.style || Toastify.defaults.style;\n      if(options.backgroundColor) {\n        this.options.style.background = options.backgroundColor;\n      }\n\n      // Returning the current object for chaining functions\n      return this;\n    },\n\n    // Building the DOM element\n    buildToast: function() {\n      // Validating if the options are defined\n      if (!this.options) {\n        throw \"Toastify is not initialized\";\n      }\n\n      // Creating the DOM object\n      var divElement = document.createElement(\"div\");\n      divElement.className = \"toastify on \" + this.options.className;\n\n      // Positioning toast to left or right or center\n      if (!!this.options.position) {\n        divElement.className += \" toastify-\" + this.options.position;\n      } else {\n        // To be depreciated in further versions\n        if (this.options.positionLeft === true) {\n          divElement.className += \" toastify-left\";\n          console.warn('Property `positionLeft` will be depreciated in further versions. Please use `position` instead.')\n        } else {\n          // Default position\n          divElement.className += \" toastify-right\";\n        }\n      }\n\n      // Assigning gravity of element\n      divElement.className += \" \" + this.options.gravity;\n\n      if (this.options.backgroundColor) {\n        // This is being deprecated in favor of using the style HTML DOM property\n        console.warn('DEPRECATION NOTICE: \"backgroundColor\" is being deprecated. Please use the \"style.background\" property.');\n      }\n\n      // Loop through our style object and apply styles to divElement\n      for (var property in this.options.style) {\n        divElement.style[property] = this.options.style[property];\n      }\n\n      // Announce the toast to screen readers\n      if (this.options.ariaLive) {\n        divElement.setAttribute('aria-live', this.options.ariaLive)\n      }\n\n      // Adding the toast message/node\n      if (this.options.node && this.options.node.nodeType === Node.ELEMENT_NODE) {\n        // If we have a valid node, we insert it\n        divElement.appendChild(this.options.node)\n      } else {\n        if (this.options.escapeMarkup) {\n          divElement.innerText = this.options.text;\n        } else {\n          divElement.innerHTML = this.options.text;\n        }\n\n        if (this.options.avatar !== \"\") {\n          var avatarElement = document.createElement(\"img\");\n          avatarElement.src = this.options.avatar;\n\n          avatarElement.className = \"toastify-avatar\";\n\n          if (this.options.position == \"left\" || this.options.positionLeft === true) {\n            // Adding close icon on the left of content\n            divElement.appendChild(avatarElement);\n          } else {\n            // Adding close icon on the right of content\n            divElement.insertAdjacentElement(\"afterbegin\", avatarElement);\n          }\n        }\n      }\n\n      // Adding a close icon to the toast\n      if (this.options.close === true) {\n        // Create a span for close element\n        var closeElement = document.createElement(\"button\");\n        closeElement.type = \"button\";\n        closeElement.setAttribute(\"aria-label\", \"Close\");\n        closeElement.className = \"toast-close\";\n        closeElement.innerHTML = \"&#10006;\";\n\n        // Triggering the removal of toast from DOM on close click\n        closeElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.removeElement(this.toastElement);\n            window.clearTimeout(this.toastElement.timeOutValue);\n          }.bind(this)\n        );\n\n        //Calculating screen width\n        var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n        // Adding the close icon to the toast element\n        // Display on the right if screen width is less than or equal to 360px\n        if ((this.options.position == \"left\" || this.options.positionLeft === true) && width > 360) {\n          // Adding close icon on the left of content\n          divElement.insertAdjacentElement(\"afterbegin\", closeElement);\n        } else {\n          // Adding close icon on the right of content\n          divElement.appendChild(closeElement);\n        }\n      }\n\n      // Clear timeout while toast is focused\n      if (this.options.stopOnFocus && this.options.duration > 0) {\n        var self = this;\n        // stop countdown\n        divElement.addEventListener(\n          \"mouseover\",\n          function(event) {\n            window.clearTimeout(divElement.timeOutValue);\n          }\n        )\n        // add back the timeout\n        divElement.addEventListener(\n          \"mouseleave\",\n          function() {\n            divElement.timeOutValue = window.setTimeout(\n              function() {\n                // Remove the toast from DOM\n                self.removeElement(divElement);\n              },\n              self.options.duration\n            )\n          }\n        )\n      }\n\n      // Adding an on-click destination path\n      if (typeof this.options.destination !== \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            if (this.options.newWindow === true) {\n              window.open(this.options.destination, \"_blank\");\n            } else {\n              window.location = this.options.destination;\n            }\n          }.bind(this)\n        );\n      }\n\n      if (typeof this.options.onClick === \"function\" && typeof this.options.destination === \"undefined\") {\n        divElement.addEventListener(\n          \"click\",\n          function(event) {\n            event.stopPropagation();\n            this.options.onClick();\n          }.bind(this)\n        );\n      }\n\n      // Adding offset\n      if(typeof this.options.offset === \"object\") {\n\n        var x = getAxisOffsetAValue(\"x\", this.options);\n        var y = getAxisOffsetAValue(\"y\", this.options);\n\n        var xOffset = this.options.position == \"left\" ? x : \"-\" + x;\n        var yOffset = this.options.gravity == \"toastify-top\" ? y : \"-\" + y;\n\n        divElement.style.transform = \"translate(\" + xOffset + \",\" + yOffset + \")\";\n\n      }\n\n      // Returning the generated element\n      return divElement;\n    },\n\n    // Displaying the toast\n    showToast: function() {\n      // Creating the DOM object for the toast\n      this.toastElement = this.buildToast();\n\n      // Getting the root element to with the toast needs to be added\n      var rootElement;\n      if (typeof this.options.selector === \"string\") {\n        rootElement = document.getElementById(this.options.selector);\n      } else if (this.options.selector instanceof HTMLElement || (typeof ShadowRoot !== 'undefined' && this.options.selector instanceof ShadowRoot)) {\n        rootElement = this.options.selector;\n      } else {\n        rootElement = document.body;\n      }\n\n      // Validating if root element is present in DOM\n      if (!rootElement) {\n        throw \"Root element is not defined\";\n      }\n\n      // Adding the DOM element\n      var elementToInsert = Toastify.defaults.oldestFirst ? rootElement.firstChild : rootElement.lastChild;\n      rootElement.insertBefore(this.toastElement, elementToInsert);\n\n      // Repositioning the toasts in case multiple toasts are present\n      Toastify.reposition();\n\n      if (this.options.duration > 0) {\n        this.toastElement.timeOutValue = window.setTimeout(\n          function() {\n            // Remove the toast from DOM\n            this.removeElement(this.toastElement);\n          }.bind(this),\n          this.options.duration\n        ); // Binding `this` for function invocation\n      }\n\n      // Supporting function chaining\n      return this;\n    },\n\n    hideToast: function() {\n      if (this.toastElement.timeOutValue) {\n        clearTimeout(this.toastElement.timeOutValue);\n      }\n      this.removeElement(this.toastElement);\n    },\n\n    // Removing the element from the DOM\n    removeElement: function(toastElement) {\n      // Hiding the element\n      // toastElement.classList.remove(\"on\");\n      toastElement.className = toastElement.className.replace(\" on\", \"\");\n\n      // Removing the element from DOM after transition end\n      window.setTimeout(\n        function() {\n          // remove options node if any\n          if (this.options.node && this.options.node.parentNode) {\n            this.options.node.parentNode.removeChild(this.options.node);\n          }\n\n          // Remove the element from the DOM, only when the parent node was not removed before.\n          if (toastElement.parentNode) {\n            toastElement.parentNode.removeChild(toastElement);\n          }\n\n          // Calling the callback function\n          this.options.callback.call(toastElement);\n\n          // Repositioning the toasts again\n          Toastify.reposition();\n        }.bind(this),\n        400\n      ); // Binding `this` for function invocation\n    },\n  };\n\n  // Positioning the toasts on the DOM\n  Toastify.reposition = function() {\n\n    // Top margins with gravity\n    var topLeftOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var topRightOffsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n    var offsetSize = {\n      top: 15,\n      bottom: 15,\n    };\n\n    // Get all toast messages on the DOM\n    var allToasts = document.getElementsByClassName(\"toastify\");\n\n    var classUsed;\n\n    // Modifying the position of each toast element\n    for (var i = 0; i < allToasts.length; i++) {\n      // Getting the applied gravity\n      if (containsClass(allToasts[i], \"toastify-top\") === true) {\n        classUsed = \"toastify-top\";\n      } else {\n        classUsed = \"toastify-bottom\";\n      }\n\n      var height = allToasts[i].offsetHeight;\n      classUsed = classUsed.substr(9, classUsed.length-1)\n      // Spacing between toasts\n      var offset = 15;\n\n      var width = window.innerWidth > 0 ? window.innerWidth : screen.width;\n\n      // Show toast in center if screen with less than or equal to 360px\n      if (width <= 360) {\n        // Setting the position\n        allToasts[i].style[classUsed] = offsetSize[classUsed] + \"px\";\n\n        offsetSize[classUsed] += height + offset;\n      } else {\n        if (containsClass(allToasts[i], \"toastify-left\") === true) {\n          // Setting the position\n          allToasts[i].style[classUsed] = topLeftOffsetSize[classUsed] + \"px\";\n\n          topLeftOffsetSize[classUsed] += height + offset;\n        } else {\n          // Setting the position\n          allToasts[i].style[classUsed] = topRightOffsetSize[classUsed] + \"px\";\n\n          topRightOffsetSize[classUsed] += height + offset;\n        }\n      }\n    }\n\n    // Supporting function chaining\n    return this;\n  };\n\n  // Helper function to get offset.\n  function getAxisOffsetAValue(axis, options) {\n\n    if(options.offset[axis]) {\n      if(isNaN(options.offset[axis])) {\n        return options.offset[axis];\n      }\n      else {\n        return options.offset[axis] + 'px';\n      }\n    }\n\n    return '0px';\n\n  }\n\n  function containsClass(elem, yourClass) {\n    if (!elem || typeof yourClass !== \"string\") {\n      return false;\n    } else if (\n      elem.className &&\n      elem.className\n        .trim()\n        .split(/\\s+/gi)\n        .indexOf(yourClass) > -1\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Setting up the prototype for the init object\n  Toastify.lib.init.prototype = Toastify.lib;\n\n  // Returning the Toastify function to be assigned to the window object/module\n  return Toastify;\n});\n\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./node_modules/toastify-js/src/toastify.js?");

/***/ }),

/***/ "./src/js/modules/avow.js":
/*!********************************!*\
  !*** ./src/js/modules/avow.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Avow)\n/* harmony export */ });\nclass Avow {\n\n    /**\n     *\n     * @param formEl\n     * @param config {Object} (errorClass, errorTextClass)\n     */\n    constructor(formEl, config = {}) {\n\n        this.formEl = formEl;\n        this.config = Object.assign({\n            errorClass: \"\",\n            errorTextClass: \"\"\n        }, config);\n\n        const types = [\n            Avow.#TYPE_REQUIRED,\n            Avow.#TYPE_EMAIL,\n            Avow.#TYPE_NUMBER,\n            Avow.#TYPE_INTEGER,\n            Avow.#TYPE_MINLENGTH,\n            Avow.#TYPE_MAXLENGTH,\n            Avow.#TYPE_MIN,\n            Avow.#TYPE_MAX,\n            Avow.#TYPE_PATTERN,\n            Avow.#TYPE_EQUALS\n        ];\n\n        types.forEach((type) => {\n\n            const els = this.formEl.querySelectorAll(`[data-avow-type-${type}]`);\n\n            els.forEach(el => {\n\n                if (!this.#elements.hasOwnProperty(type)) {\n                    this.#elements[type] = [];\n                }\n\n                this.#elements[type].push(el);\n\n            });\n\n        });\n\n    }\n\n    // Types\n\n    static #TYPE_REQUIRED = \"required\";\n    static #TYPE_EMAIL = \"email\";\n    static #TYPE_NUMBER = \"number\";\n    static #TYPE_INTEGER = \"integer\";\n    static #TYPE_MINLENGTH = \"minlength\";\n    static #TYPE_MAXLENGTH = \"maxlength\";\n    static #TYPE_MIN = \"min\";\n    static #TYPE_MAX = \"max\";\n    static #TYPE_PATTERN = \"pattern\";\n    static #TYPE_EQUALS = \"equals\";\n\n    #elements = {};\n\n    #isValid = true;\n\n    getElements() {\n        return this.#elements;\n    }\n\n    /**\n     * Is form valid?\n     *\n     * @returns {boolean}\n     */\n    isValid() {\n        return this.#isValid;\n    }\n\n    validate() {\n\n        this.reset();\n\n        Object.entries(this.#elements).forEach(([key, value]) => {\n\n\n            if (key === Avow.#TYPE_REQUIRED) {\n                value.forEach(el => {\n                    this.#validateRequired(el);\n                });\n            } else if (key === Avow.#TYPE_EMAIL) {\n                value.forEach(el => {\n                    this.#validateEmail(el);\n                });\n            } else if (key === Avow.#TYPE_NUMBER) {\n                value.forEach(el => {\n                    this.#validateNumber(el);\n                });\n            } else if (key === Avow.#TYPE_INTEGER) {\n                value.forEach(el => {\n                    this.#validateInteger(el);\n                });\n            } else if (key === Avow.#TYPE_MINLENGTH) {\n                value.forEach(el => {\n                    this.#validateMinLength(el, el.dataset.avowTypeMinlength);\n                })\n            } else if (key === Avow.#TYPE_MAXLENGTH) {\n                value.forEach(el => {\n                    this.#validateMaxLength(el, el.dataset.avowTypeMaxlength);\n                })\n            } else if (key === Avow.#TYPE_MIN) {\n                value.forEach(el => {\n                    this.#validateMin(el, el.dataset.avowTypeMin);\n                })\n            } else if (key === Avow.#TYPE_MAX) {\n                value.forEach(el => {\n                    this.#validateMax(el, el.dataset.avowTypeMax);\n                })\n            } else if (key === Avow.#TYPE_PATTERN) {\n                value.forEach(el => {\n                    this.#validatePattern(el, el.dataset.avowTypePattern);\n                })\n            } else if (key === Avow.#TYPE_EQUALS) {\n                value.forEach(el => {\n                    this.#validateEquals(el, el.dataset.avowTypeEquals);\n                })\n            }\n\n        });\n\n    }\n\n    /**\n     * Reset form validation errors.\n     */\n    reset() {\n\n        this.#isValid = true;\n\n        const els = document.querySelectorAll(\".avow-has-error\");\n\n        els.forEach(el => {\n            this.#resetField(el);\n        });\n\n    }\n\n    #resetField(el) {\n\n        // Reset field\n\n        el.classList.remove(\"avow-has-error\");\n        el.classList.remove(...this.config.errorClass.split(\" \"));\n\n        // Remove errors\n\n        let toRemove = [];\n\n        for (let sibling of el.parentNode.children) {\n\n            if (sibling.classList.contains(\"avow-error\")) {\n                toRemove.push(sibling);\n            }\n        }\n\n        toRemove.forEach(el => {\n            el.remove();\n        });\n\n    }\n\n    /**\n     * Set field as invalid.\n     *   - Update class\n     *   - Add error\n     *\n     * @param el\n     * @param msg\n     */\n    #setFieldInvalid(el, msg) {\n\n        this.#isValid = false;\n\n        el.classList.add(\"avow-has-error\");\n        el.classList.add(...this.config.errorClass.split(\" \"));\n\n        let msgContainer = document.createElement(\"div\");\n        msgContainer.classList.add(\"avow-error\");\n        msgContainer.classList.add(...this.config.errorTextClass.split(\" \"));\n        msgContainer.innerText = msg;\n\n        //el.after(msgContainer);\n\n        const parent = el.parentNode;\n        parent.appendChild(msgContainer);\n\n    }\n\n    /**\n     * Get field message.\n     *\n     * @param type\n     * @param msg\n     * @returns {string}\n     */\n    #getMsg(type, msg) {\n\n        const defaults = {\n            required: \"This field is required\",\n            email: \"Value must be a valid email address\",\n            number: \"Value must be a number\",\n            integer: \"Value must be an integer\",\n            minlength: \"Value does not meet minimum length\",\n            maxlength: \"Value exceeds maximum length\",\n            min: \"Value does not meet minimum value\",\n            max: \"Value exceeds maximum value\",\n            pattern: \"Value does not meet required definition\",\n            equals: \"Value does not equal\"\n        };\n\n        if (typeof msg === \"undefined\") {\n            return defaults[type];\n        }\n\n        return msg;\n\n    }\n\n    // ------------------------- Validators -------------------------\n\n    #validateRequired(el) {\n\n        if (el.value === \"\") {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_REQUIRED, el.dataset.avowRequiredMsg));\n        }\n\n    }\n\n    #validateEmail(el) {\n\n        if (el.value === \"\") {\n            return;\n        }\n\n        const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n\n        if (!regex.test(el.value)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_EMAIL, el.dataset.avowEmailMsg));\n        }\n\n    }\n\n    #validateNumber(el) {\n\n        if ((typeof el.value !== \"number\" && isNaN(el.value)) || el.value === \"\") {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_NUMBER, el.dataset.avowNumberMsg));\n        }\n\n    }\n\n    #validateInteger(el) {\n\n        if (el.value === \"\") {\n            return;\n        }\n\n        const regex = /^-?\\d+$/;\n\n        if (!regex.test(el.value)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_INTEGER, el.dataset.avowIntegerMsg));\n        }\n\n    }\n\n    #validateMinLength(el, val) {\n\n        if (el.value.length < parseInt(val)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_MINLENGTH, el.dataset.avowMinlengthMsg));\n        }\n\n    }\n\n    #validateMaxLength(el, val) {\n\n        if (el.value.length > parseInt(val)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_MAXLENGTH, el.dataset.avowMaxlengthMsg));\n        }\n\n    }\n\n    #validateMin(el, val) {\n\n        if (el.value === \"\") {\n            return;\n        }\n\n        if (isNaN(parseFloat(el.value)) || parseFloat(el.value) < parseFloat(val)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_MIN, el.dataset.avowMinMsg));\n        }\n\n    }\n\n    #validateMax(el, val) {\n\n        if (el.value === \"\") {\n            return;\n        }\n\n        if (isNaN(parseFloat(el.value)) || parseFloat(el.value) > parseFloat(val)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_MAX, el.dataset.avowMaxMsg));\n        }\n\n    }\n\n    #validatePattern(el, val) {\n\n        if (el.value === \"\") {\n            return;\n        }\n\n        const match = val.match(new RegExp('^/(.*?)/([gimy]*)$'));\n\n        if (!match) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_PATTERN, el.dataset.avowPatternMsg));\n            return;\n        }\n\n        const regex = new RegExp(match[1], match[2]);\n\n        if (!regex.test(el.value)) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_PATTERN, el.dataset.avowPatternMsg));\n        }\n\n    }\n\n    #validateEquals(el, eqId) {\n\n        const eqEl = document.getElementById(eqId);\n\n        if (!eqEl || el.value !== eqEl.value) {\n            this.#setFieldInvalid(el, this.#getMsg(Avow.#TYPE_EQUALS, el.dataset.avowEqualsMsg));\n        }\n\n    }\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/avow.js?");

/***/ }),

/***/ "./src/js/modules/console.js":
/*!***********************************!*\
  !*** ./src/js/modules/console.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   logError: () => (/* binding */ logError),\n/* harmony export */   logInfo: () => (/* binding */ logInfo),\n/* harmony export */   logMessage: () => (/* binding */ logMessage),\n/* harmony export */   logSuccess: () => (/* binding */ logSuccess),\n/* harmony export */   logWarning: () => (/* binding */ logWarning)\n/* harmony export */ });\n/**\n * General message.\n *\n * @param message\n */\nfunction logMessage(message) {\n    console.log('%cMESSAGE', 'font-weight:bold;border-radius:3px;padding: 0 2px 0 2px;background-color:grey;color:black;', message);\n}\n\n/**\n * Info message.\n *\n * @param message\n */\nfunction logInfo(message) {\n    console.log('%cINFO', 'font-weight:bold;border-radius:3px;padding: 0 2px 0 2px;background-color:blue;color:white;', message);\n}\n\n/**\n * Warning message.\n *\n * @param message\n */\nfunction logWarning(message) {\n    console.log('%cWARNING', 'font-weight:bold;border-radius:3px;padding: 0 2px 0 2px;background-color:orange;color:black;', message);\n}\n\n/**\n * Error message.\n *\n * @param message\n */\nfunction logError(message) {\n    console.log('%cERROR', 'font-weight:bold;border-radius:3px;padding: 0 2px 0 2px;background-color:red;color:white;', message);\n}\n\n/**\n * Success message.\n *\n * @param message\n */\nfunction logSuccess(message) {\n    console.log('%cSUCCESS', 'font-weight:bold;border-radius:3px;padding: 0 2px 0 2px;background-color:green;color:white;', message);\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/console.js?");

/***/ }),

/***/ "./src/js/modules/form.js":
/*!********************************!*\
  !*** ./src/js/modules/form.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Form)\n/* harmony export */ });\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers */ \"./src/js/modules/helpers.js\");\n\n\nclass Form {\n\n    constructor(formEl, submitEl, existingData = {}) {\n        this.formEl = formEl;\n        this.submitEl = submitEl;\n        this.existingData = existingData;\n    }\n\n    #formData = {};\n\n    /**\n     * Get submitted form data.\n     * This must be called before evaluating changed data.\n     *\n     * @returns {Object}\n     */\n    getData() {\n        this.#formData = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.undot)((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getFormData)(this.formEl));\n        return this.#formData;\n    }\n\n    /**\n     * Get changes between existing data and form data.\n     *\n     * @returns {Object}\n     */\n    getChangedData() {\n\n        const changes =  (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.dot)((0,_helpers__WEBPACK_IMPORTED_MODULE_0__.getChanges)(this.existingData, this.#formData));\n\n        const existing = (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.dot)(this.existingData);\n\n        for (let key in changes) {\n\n            // Do not submit empty values if not yet existing\n\n            if (changes[key] === \"\" && (!existing.hasOwnProperty(key) || existing[key] === null)) {\n                delete changes[key];\n            }\n\n        }\n\n        return (0,_helpers__WEBPACK_IMPORTED_MODULE_0__.undot)(changes);\n\n    }\n\n    /**\n     * Has form data changed from existing data?\n     *\n     * @returns {Boolean}\n     */\n    hasChangedData() {\n        return !(0,_helpers__WEBPACK_IMPORTED_MODULE_0__.objIsEmpty)(this.getChangedData());\n    }\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/form.js?");

/***/ }),

/***/ "./src/js/modules/functions.js":
/*!*************************************!*\
  !*** ./src/js/modules/functions.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleCurrentClass: () => (/* binding */ handleCurrentClass)\n/* harmony export */ });\n/**\n * Add classes to all hyperlinks as defined in the data-skin-current-class attribute\n * when current URL matches.\n */\nfunction handleCurrentClass() {\n\n    const currentEls = document.querySelectorAll(\"a[data-skin-current-class]\");\n    const currentUrl = window.location.origin + window.location.pathname;\n\n    currentEls.forEach((el) => {\n\n        const href = el.href.split('#')[0];\n\n        if (currentUrl === href.split('?')[0]) {\n            const classList = el.getAttribute('data-skin-current-class').split(' ');\n            el.classList.add(...classList);\n        }\n\n    });\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/functions.js?");

/***/ }),

/***/ "./src/js/modules/helpers.js":
/*!***********************************!*\
  !*** ./src/js/modules/helpers.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dot: () => (/* binding */ dot),\n/* harmony export */   getChanges: () => (/* binding */ getChanges),\n/* harmony export */   getDiff: () => (/* binding */ getDiff),\n/* harmony export */   getFormData: () => (/* binding */ getFormData),\n/* harmony export */   getProp: () => (/* binding */ getProp),\n/* harmony export */   merge: () => (/* binding */ merge),\n/* harmony export */   objIsEmpty: () => (/* binding */ objIsEmpty),\n/* harmony export */   strToBool: () => (/* binding */ strToBool),\n/* harmony export */   strToInt: () => (/* binding */ strToInt),\n/* harmony export */   undot: () => (/* binding */ undot)\n/* harmony export */ });\n/**\n *\n * @param str {String}\n * @returns {boolean}\n */\nfunction strToBool(str) {\n    return str === \"true\";\n}\n\n/**\n *\n * @param str\n * @returns {number}\n */\nfunction strToInt(str) {\n    if (str === \"\") {\n        return 0;\n    }\n    return parseInt(str);\n}\n\n/**\n * Get object property or default value if not existing.\n *\n * @param obj {Object}\n * @param key {string}\n * @param defaultValue\n * @returns {*|null}\n */\nfunction getProp(obj, key, defaultValue = null) {\n\n    if (key in obj) {\n        return obj[key];\n    }\n\n    return defaultValue;\n\n}\n\n/**\n * Is object empty?\n *\n * @param obj {Object}\n * @returns {Boolean}\n */\nfunction objIsEmpty(obj) {\n    return JSON.stringify(obj) === \"{}\";\n}\n\n/**\n * Flatten an object into dot notation.\n *\n * @param obj {Object}\n * @param parentKey {String}\n * @returns {Object}\n */\nfunction dot(obj, parentKey = '') {\n\n    const result = {};\n\n    for (const key in obj) {\n\n        if (obj.hasOwnProperty(key)) {\n\n            const newKey = parentKey ? `${parentKey}.${key}` : key;\n\n            if (typeof obj[key] === 'object' && obj[key] !== null && !Array.isArray(obj[key])) {\n                Object.assign(result, dot(obj[key], newKey));\n            } else {\n                result[newKey] = obj[key];\n            }\n\n        }\n\n    }\n\n    return result;\n\n}\n\n/**\n * Undot object.\n *\n * @param obj {Object}\n * @returns {Object}\n */\nfunction undot(obj) {\n\n    const result = {};\n\n    for (const key in obj) {\n        const value = obj[key];\n        let current = result;\n        const path = key.split('.');\n\n        for (let i = 0; i < path.length - 1; i++) {\n            const segment = path[i];\n            if (!current[segment]) {\n                current[segment] = {};\n            }\n            current = current[segment];\n        }\n\n        current[path[path.length - 1]] = value;\n    }\n\n    return result;\n\n}\n\n/**\n * Merge objects.\n *\n * @param obj1 {Object}\n * @param obj2 {Object}\n * @returns {Object}\n */\nfunction merge(obj1, obj2) {\n    return undot({...dot(obj1), ...dot(obj2)});\n}\n\n/**\n * Get difference between two objects.\n *\n * TODO:\n * May need to dot/undot objects\n *\n * @param obj1 {Object} (Original object)\n * @param obj2 {Object} (Updated object)\n * @returns {Object}\n */\nfunction getDiff(obj1, obj2) {\n\n    let diff = {};\n\n    // Iterate over keys in the first object\n    for (let key in obj2) {\n        if (obj2.hasOwnProperty(key)) {\n            if (!obj1.hasOwnProperty(key)) {\n                // Key exists in obj1 but not in obj2\n                diff[key] = {status: 'added', value: obj2[key]};\n            } else if (obj2[key] !== obj1[key]) {\n                // Key exists in both objects but values are different\n                diff[key] = {status: 'modified', oldValue: obj1[key], newValue: obj2[key]};\n            }\n        }\n    }\n\n    // Iterate over keys in the second object to find keys that are in obj2 but not in obj1\n\n    for (let key in obj1) {\n        if (obj1.hasOwnProperty(key) && !obj2.hasOwnProperty(key)) {\n            diff[key] = {status: 'removed', value: obj1[key]};\n        }\n    }\n\n    return diff;\n\n}\n\n/**\n * Get changes between two objects.\n *\n * @param obj1 {Object} (Original object)\n * @param obj2 {Object} (Updated object)\n * @returns {Object}\n */\nfunction getChanges(obj1, obj2) {\n\n    obj1 = dot(obj1);\n    obj2 = dot(obj2);\n\n    let diff = {};\n\n    // Iterate over keys in the first object\n    for (let key in obj2) {\n        if (obj2.hasOwnProperty(key)) {\n\n            if (!obj1.hasOwnProperty(key)) {\n                // Key exists in obj1 but not in obj2\n                diff[key] = obj2[key];\n\n            } else if (obj2[key] !== obj1[key]) {\n                // Key exists in both objects but values are different\n                diff[key] = obj2[key];\n            }\n\n        }\n    }\n\n    return undot(diff);\n\n}\n\n/**\n * Get form data as object.\n *\n * @param el {Element} (Form element)\n * @returns {Object}\n */\nfunction getFormData(el) {\n\n    const formData = new FormData(el);\n    const data = {};\n\n    formData.forEach((value, key) => {\n\n        if (key.endsWith(\"[]\")) { // Handle arrays\n            const newKey = key.slice(0, -2);\n            data[newKey] = formData.getAll(key);\n        } else {\n            data[key] = value;\n        }\n\n    });\n\n    return data;\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/helpers.js?");

/***/ }),

/***/ "./src/js/modules/http.js":
/*!********************************!*\
  !*** ./src/js/modules/http.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   request: () => (/* binding */ request)\n/* harmony export */ });\n/* harmony import */ var _console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./console */ \"./src/js/modules/console.js\");\n\n\n/**\n * Make HTTP request using fetch.\n *\n * @param url {string}\n * @param method {string}\n * @param body {object|null}\n * @param headers {object}\n */\nasync function request(url, method, body = null, headers = {}) {\n\n    try {\n\n        const response = await fetch(url, {\n            method: method,\n            body: body,\n            headers: headers\n        });\n\n        const json = await response.json();\n\n        return {\n            status: response.status,\n            body: json\n        }\n\n    } catch (error) {\n        (0,_console__WEBPACK_IMPORTED_MODULE_0__.logError)('Request error');\n        (0,_console__WEBPACK_IMPORTED_MODULE_0__.logError)(error);\n    }\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/http.js?");

/***/ }),

/***/ "./src/js/modules/theme.js":
/*!*********************************!*\
  !*** ./src/js/modules/theme.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detect: () => (/* binding */ detect),\n/* harmony export */   set: () => (/* binding */ set)\n/* harmony export */ });\n/* harmony import */ var _console__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./console */ \"./src/js/modules/console.js\");\n\n\n/**\n * Detect theme.\n */\nfunction detect() {\n\n    if (\"theme\" in localStorage) {\n\n        try {\n\n            let theme = JSON.parse(localStorage.theme);\n            set(theme.name);\n\n        } catch (e) {\n            localStorage.removeItem(\"theme\");\n            (0,_console__WEBPACK_IMPORTED_MODULE_0__.logError)(\"Unable to detect theme: Invalid localStorage format\");\n        }\n\n    } else if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        set(\"dark\");\n    } else {\n        set(\"light\");\n    }\n\n    const themeToggles = document.querySelectorAll(\"[data-theme-toggle]\");\n\n    themeToggles.forEach(toggle => {\n\n        toggle.addEventListener(\"click\", () => {\n\n            let theme = toggle.getAttribute(\"data-theme-toggle\");\n            set(theme);\n\n        });\n\n    });\n\n}\n\n/**\n * Set theme.\n *\n * @param {string} value\n */\nfunction set(value) {\n\n    if (value === \"light\") {\n        document.documentElement.classList.add(\"light\");\n        document.documentElement.classList.remove(\"dark\");\n    } else {\n        document.documentElement.classList.add(\"dark\");\n        document.documentElement.classList.remove(\"light\");\n    }\n\n    localStorage.theme = JSON.stringify({\n        name: value\n    });\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/theme.js?");

/***/ }),

/***/ "./src/js/modules/toast.js":
/*!*********************************!*\
  !*** ./src/js/modules/toast.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   close: () => (/* binding */ close),\n/* harmony export */   queue: () => (/* binding */ queue),\n/* harmony export */   show: () => (/* binding */ show),\n/* harmony export */   showQueue: () => (/* binding */ showQueue)\n/* harmony export */ });\n/* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! toastify-js */ \"./node_modules/toastify-js/src/toastify.js\");\n/* harmony import */ var toastify_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(toastify_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/*\nSee: https://github.com/apvarun/toastify-js/tree/master\n */\n\n/**\n * Queue a toast to be shown with showQueue method by saving to localStorage.\n *\n * @param config {Object}\n * @param lang {Object}\n */\nfunction queue(config = {}, lang = {}) {\n\n    let toasts = [];\n\n    if (\"toasts\" in localStorage) {\n\n        if (Array.isArray(JSON.parse(localStorage.toasts))) {\n            toasts = JSON.parse(localStorage.toasts);\n        }\n\n    }\n\n    toasts.push({config: config, lang: lang});\n    localStorage.toasts = JSON.stringify(toasts);\n\n}\n\n/**\n * Show queued toasts from localStorage.\n */\nfunction showQueue() {\n\n    if (\"toasts\" in localStorage) {\n\n        if (Array.isArray(JSON.parse(localStorage.toasts))) {\n\n            const toasts = JSON.parse(localStorage.toasts);\n\n            for (const toast of toasts) {\n\n                if (typeof toast === \"object\" && typeof toast.config === \"object\" && typeof toast.lang === \"object\") {\n                    show(toast.config, toast.lang);\n\n                }\n            }\n\n        }\n\n        localStorage.removeItem(\"toasts\");\n\n    }\n\n}\n\n/**\n * Show Toastify toast.\n * See: https://github.com/apvarun/toastify-js/blob/master/README.md#api\n *\n * @param config\n * @param lang\n */\nfunction show(config = {}, lang = {}) {\n\n    const defaultConfig = {\n        text: \"\",\n        className: \"\",\n        duration: 3000,\n        close: true,\n        gravity: \"bottom\",\n        position: \"right\",\n        offset: {\n            x: 0,\n            y: 0\n        },\n        escapeMarkup: false,\n        stopOnFocus: true,\n        oldestFirst: true\n    }\n\n    const defaultLang = {\n        close: \"Close\"\n    }\n\n    config = {...defaultConfig, ...config};\n\n    lang = {...defaultLang, ...lang};\n\n    if (config.close === true) {\n        config.text += '<button onclick=\"Skin.Toast.close(this)\" type=\"button\" class=\"tc-toast-close\" aria-label=\"' + lang.close + '\"><span class=\"sr-only\">' + lang.close + '</span><span><svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18 18 6M6 6l12 12\" /></svg></span></button>';\n    }\n\n    config.className = config.className + \" tc-toast\";\n\n    toastify_js__WEBPACK_IMPORTED_MODULE_0___default()(config).showToast();\n\n}\n\n/**\n * Close Toastify toast.\n * See: https://preline.co/docs/toast-notifications.html\n *\n * @param el {Element}\n */\nfunction close(el) {\n    const parent = el.closest('.toastify');\n    const close = parent.querySelector('.toast-close');\n    close.click();\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/modules/toast.js?");

/***/ }),

/***/ "./src/js/skin.js":
/*!************************!*\
  !*** ./src/js/skin.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_avow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/avow */ \"./src/js/modules/avow.js\");\n/* harmony import */ var _modules_console__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/console */ \"./src/js/modules/console.js\");\n/* harmony import */ var _modules_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/form */ \"./src/js/modules/form.js\");\n/* harmony import */ var _modules_functions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/functions */ \"./src/js/modules/functions.js\");\n/* harmony import */ var _modules_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/helpers */ \"./src/js/modules/helpers.js\");\n/* harmony import */ var _modules_http__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/http */ \"./src/js/modules/http.js\");\n/* harmony import */ var _modules_theme__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/theme */ \"./src/js/modules/theme.js\");\n/* harmony import */ var _modules_toast__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/toast */ \"./src/js/modules/toast.js\");\n\n\n\n\n\n\n\n\n\nexports.init = function() {\n\n    _modules_theme__WEBPACK_IMPORTED_MODULE_6__.detect();\n\n    _modules_functions__WEBPACK_IMPORTED_MODULE_3__.handleCurrentClass();\n\n    _modules_toast__WEBPACK_IMPORTED_MODULE_7__.showQueue();\n\n    window.Skin = {\n        Avow: _modules_avow__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n        Console: _modules_console__WEBPACK_IMPORTED_MODULE_1__,\n        Form: _modules_form__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        Helpers: _modules_helpers__WEBPACK_IMPORTED_MODULE_4__,\n        Http: _modules_http__WEBPACK_IMPORTED_MODULE_5__,\n        Theme: _modules_theme__WEBPACK_IMPORTED_MODULE_6__,\n        Toast: _modules_toast__WEBPACK_IMPORTED_MODULE_7__\n    }\n\n}\n\n//# sourceURL=webpack://@bayfrontmedia/skin/./src/js/skin.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/skin.js");
/******/ 	
/******/ })()
;